//def env = System.getProperty("env") ?: "dev"
//def env = System.getProperty("env") ?: "prod"
//def env = System.getProperty("env") ?: "test"
def env = System.getProperty("env") ?: "futurever"
//apply from: "profile-${env}.gradle"

sourceSets {
    main {
        resources {
//            srcDirs = ["src/main/resources", "src/main/profile/$env"]
            srcDirs = ["src/main/profile/$env"]
        }
    }
}

archivesBaseName = 'gradle-multi-profile'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext {
        springBootVersion = '2.0.0.M4'
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

// 显示当前项目下所有用于 compile 的 jar.
task listJars(description: 'Display all compile jars.') << {
    configurations.compile.each { File file -> println file.name }
}


dependencies {
    // 配置项目依赖
    compile project(":core")
    testCompile(
            'junit:junit:4.12',
            'org.springframework.boot:spring-boot-starter-test'
    )
    compile(
            'io.springfox:springfox-swagger2:2.7.0',
            'io.springfox:springfox-swagger-ui:2.7.0',
    )

    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-logging'
        exclude module: 'logback-classic'
    }
    compile(
            'org.springframework.boot:spring-boot-starter-aop',
            'org.springframework.boot:spring-boot-starter-log4j2',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml',
            'com.lmax:disruptor:3.3.6'
    )
    compile('com.alibaba:fastjson:1.2.37')

    compile("org.springframework.boot:spring-boot-configuration-processor")
    runtime('org.springframework.boot:spring-boot-devtools')

    compile('org.springframework.boot:spring-boot-starter-quartz')

    // string escape
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.1'
    compile(
            'com.google.code.gson:gson:2.8.0',
            'dom4j:dom4j:1.6.1',
            'joda-time:joda-time:2.2',
            'org.apache.httpcomponents:httpclient:4.5.3',
            'commons-codec:commons-codec:1.10',
    )
    compile(
            'com.google.guava:guava:23.0',
    )
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

